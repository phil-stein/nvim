  -- {
  --   -- tab line 
  --   'romgrk/barbar.nvim',
  --   -- dependencies = {
  --   --   'lewis6991/gitsigns.nvim', -- OPTIONAL: for git status
  --   -- },
  --   init = function() vim.g.barbar_auto_setup = false end,
  --   opts = {
  --     -- lazy.nvim will automatically call setup for you. put your options here, anything missing will use the default:
  --     -- animation = true,        -- not sure
  --     -- insert_at_start = true,  -- new tab at start
  --     -- insert_at_end = false,   -- new tab at end
  --     auto_hide = 1,  -- hide when only 1 tab
  --     -- Enables/disable clickable tabs
  --     --  - left-click: go to buffer
  --     --  - middle-click: delete buffer
  --     clickable = true,
  --     -- A buffer to this direction will be focused (if it exists) when closing the current buffer.
  --     -- Valid options are 'left' (the default), 'previous', and 'right'
  --     focus_on_close = 'previous',
  --     -- Hide inactive buffers and file extensions. options are `alternate`, `current`, `visible`, 'extensions', 'inactive'
  --     -- hide = { inactive = true},
  --     -- Enable/disable current/total tabpages indicator (top right corner)
  --     tabpages = true,
  --   },
  -- },
  -- {
  --   -- tabline, tab-line, tab line
  --   'kdheepak/tabline.nvim',
  --   config = function()
  --     require'tabline'.setup {
  --       -- Defaults configuration options
  --       enable = true,
  --       options = {
  --       -- If lualine is installed tabline will use separators configured in lualine by default.
  --       -- These options can be used to override those settings.
  --         section_separators   = {'', ''},
  --         component_separators = {'', ''},
  --         max_bufferline_percent = 66, -- set to nil by default, and it uses vim.o.columns * 2/3
  --         show_tabs_always = false, -- this shows tabs only when there are more than one tab or if the first tab is named
  --         show_devicons = true, -- this shows devicons in buffer section
  --         show_bufnr = false, -- this appends [bufnr] to buffer section,
  --         show_filename_only = false, -- shows base filename only instead of relative path in filename
  --         modified_icon = "+ ", -- change the default modified icon
  --         modified_italic = false, -- set to true by default; this determines whether the filename turns italic if modified
  --         show_tabs_only = false, -- this shows only tabs instead of tabs + buffers
  --       }
  --     }
  --     vim.cmd[[
  --       set guioptions-=e " Use showtabline in gui vim
  --       set sessionoptions+=tabpages,globals " store tabpages and globals in session
  --     ]]
  --   end,
  --   requires = { { 'hoob3rt/lualine.nvim', opt=true }, {'kyazdani42/nvim-web-devicons', opt = true} }
  -- },

  -- { -- floating terminal, toggle term
  --   'akinsho/toggleterm.nvim', version = "*", opts = {},
  --   config = function()
  --     require("toggleterm").setup {
  --       -- size can be a number or function which is passed the current terminal
  --       -- size = 20,
  --       -- size = function(term)
  --       --   if term.direction == "horizontal" then
  --       --     return 15
  --       --   elseif term.direction == "vertical" then
  --       --     return vim.o.columns * 0.4
  --       --   end
  --       -- end,
  --       name = "terminal",
  --       open_mapping = [[<C-ä>]],
  --       hide_numbers = true, -- hide the number column in toggleterm buffers
  --       start_in_insert = true,
  --       on_open = function() vim.cmd('startinsert') end, -- start in insert
  --       shade_filetypes = {},
  --       autochdir = true, -- when neovim changes it current directory the terminal will change it's own when next it's opened
  --       -- highlights = {
  --       --   -- highlights which map to a highlight group name and a table of it's values
  --       --   -- NOTE: this is only a subset of values, any group placed here will be set for the terminal window split
  --       --   Normal = {
  --       --     guibg = "<VALUE-HERE>",
  --       --   },
  --       --   NormalFloat = {
  --       --     link = 'Normal'
  --       --   },
  --       --   FloatBorder = {
  --       --     guifg = "<VALUE-HERE>",
  --       --     guibg = "<VALUE-HERE>",
  --       --   },
  --       -- },
  --       shade_terminals = true, -- NOTE: this option takes priority over highlights specified so if you specify Normal highlights you should set this to false
  --       -- shading_factor = '<number>', -- the percentage by which to lighten terminal background, default: -30 (gets multiplied by -3 if background is light)
  --       insert_mappings = true, -- whether or not the open mapping applies in insert mode
  --       terminal_mappings = true, -- whether or not the open mapping applies in the opened terminals
  --       persist_size = true,
  --       persist_mode = true, -- if set to true (default) the previous terminal mode will be remembered
  --       direction = 'float', -- 'vertical' | 'horizontal' | 'tab' | 'float',
  --       close_on_exit = true, -- close the terminal window when the process exits
  --        -- Change the default shell. Can be a string or a function returning a string
  --       shell = vim.o.shell,
  --       auto_scroll = true, -- automatically scroll to the bottom on terminal output
  --       -- This field is only relevant if direction is set to 'float'
  --       float_opts = {
  --         -- The border key is *almost* the same as 'nvim_open_win'
  --         -- see :h nvim_open_win for details on borders however
  --         -- the 'curved' border is a custom border type
  --         -- not natively supported but implemented in this plugin.
  --         border = "curved", -- 'single' | 'double' | 'shadow' | 'curved' | ... other options supported by win open
  --         -- like `size`, width, height, row, and col can be a number or function which is passed the current terminal
  --         width  = math.floor(vim.o.columns * 0.6),
  --         height = math.floor(vim.o.lines   * 0.8),
  --         -- row = <value>,
  --         -- col = <value>,
  --         -- winblend = 3,
  --         -- zindex = <value>,
  --         title_pos = 'center', -- 'left' | 'center' | 'right', position of the title of the floating window
  --       },
  --       winbar = {
  --         enabled = false,
  --         name_formatter = function(term) --  term: Terminal
  --           return term.name
  --         end
  --       },
  --     }
  --   end,

  --   -- Ctrl - b -> build project or open in appropriate software
  --   vim.keymap.set('n', '<C-b>',
  --     function()
  --       if (vim.bo.filetype == "markdown") then
  --       require('fidget').notify( "filetype: "..vim.bo.filetype )
  --       -- require('notify')( "filetype: "..vim.bo.filetype )
  --         vim.cmd( ':Typora' )
  --       else
  --         -- vim.cmd( ':ToggleTerm<CR>build<CR>' )
  --         vim.cmd( 'TermExec cmd="build"')
  --       end
  --     end,
  --     { silent = true , desc = "call build batch/bash file or open .md files in typora"}),
  -- },
  -- { -- typora | Typora, custom hotkey to open current file in typora
  --   -- :Typora command
  --   vim.api.nvim_create_user_command('Typora',
  --     function()
  --       -- vim.cmd( "!typora %" )
  --       -- vim.cmd( ":ToggleTerm<CR>typora %<CR>" )
  --       -- vim.cmd( 'TermExec cmd="taskkill /F /IM Typora.exe"')
  --       vim.cmd( '!taskkill /F /IM Typora.exe')
  --       vim.cmd( 'TermExec cmd="Typora %"')
  --       vim.cmd( "ToggleTerm" )
  --     end,
  --   {  nargs = 0, desc = ''}),
  -- },
